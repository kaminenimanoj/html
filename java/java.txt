language fundamentals:-
1 identifiers
2 reserved words
3 date types
4 literals
5 arrays
6 types of varialler
7 var-arg methods
8 main methods
9 command line arguments
10 java coding stand

1 Identifiers:-
 a name in java program id identifier

rolls for defining java identifier:-
the allowed chars in java chars-a to z,A to Z,0 to 9,$ and _ identifiers
if we are using any other char we will get compost time error

ex:-total_number is correct
total# is incorrect
total123 is correct
123total is incorrect
identifers are cannot start digit total123 vaild but 123 total invaild

ex-class test
{
int number=10;
int number=20;
int number=30;
}

in java indentifers who many char allowed
they is no length limit for java indentifer but is not requeted to take to length indentifiers
ex-int x=10; is correct
in if = 20;is incorrect why means we cannot use reserved words as indentifiers

ex:-class test
{
public static void main (string()args)
{
int runnable
system.out.printin(runable);
}
}

which of the are vaild java indentifiers
total_number is correct
total# is incorrect
123 total is incorrect
total123 is correct
ca$h is correct
_$_$_$_$_$_$_ is correct
all@hands is incorrect
java2share is correct
Integer is correct 
Int is correct 
int is in correct

Reserved words:-
the total reserved words are 53
keywords(50),reserved(3)

keywords are 2 types
use keywords,unused keywords
in use keywords:-if..else...
unused keywords:- goto,const

reserved word:-
ture
flase
null

keyword for date types:-
byte
short
int
long
float
double
boolen
char

kayword for flowchat:-
if 
else
switch
case
dfault
while
do
for
break
contine
refurn

keywords for modifiers:-
public
private
protated
static
final
asstrit
synchroized
native
stritfp(1.2v)
transient
volatile

keyworld for extention standing:-
try
catch
findly
throw
throws
arrert(1.4v) 

class related keywords:-
class
interface
extends
inplements
package
import

object related keywords:-
new
instance
super
this

void return type keyword:-
void

used keywords:-
goto
const

reserved keyword
enum(1.5v)

date types:-
in java every variable and every expertion as same type
every assiament should be creaked by complier for type comparability
java is not consider as pure object orented programing lananage because seriel oops features are not satified by java (like operated over loading and multiped etc...)
more over we are depending primitive data type with non-objects

primitive date types(8):-
1 numeric date types
2 non-numeric data types

1 numeric date types:-
1 integral date types
2 floating-point date types

1 integral date types
byte
short
int
long

2 floating-point date types
float
double

2 non-numeric date types
char
boolean

byte date type:-
size 1byte(8bits)

max valve:-127
min value:-128
range:- -128 to 127

Ex:-
byte b=10; is correct
byte b=127;is correct
byte b=128;is incorrect 
ce:-possible loss of precision
found=int
required=byte

byte b=true;-ce:-incompotite types
found=boolean

short=
size=2bytes(16 bits)
range=-2 power 15 to 2 power 15-1
[-32768 to 32767]

int=
the most commond used date type is int
size=4 bytes (32 bits)
range=-2 power 31 to 2 power 31-1
[-2147483648 to 2147483647]

Ex=int x=2147483647; is correct
int x=2147483648;is incorrect
ce-integer number to large

int x=2147483648l;
found=long
required=int

intx=true;
ce-incompotible types
found=boolean 
required=int


